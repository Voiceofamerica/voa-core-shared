"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_tag_1 = require("graphql-tag");
exports.articleSchema = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  enum Audience {\n    en\n    zh\n    fa\n  }\n\n  enum ContentType {\n    Audio\n    Video\n    PhotoGallery\n  }\n\n  enum ArticleVideoRelationship {\n    SameItem\n    MainImage\n    EmbededInContent\n  }\n\n  type Name {\n    first: String!\n    middle: String\n    last: String\n  }\n\n  type Author {\n    name: Name!\n    email: String\n    description: String\n    id: Int!\n  }\n\n  type Image {\n    imageTitle: String\n    id: Int!\n    type: [ContentType]\n    url: String!\n  }\n\n  type Audio {\n    audioTitle: String!\n    audioDescription: String\n    id: Int!\n    duration: Int\n    mime: String\n    url: String\n    date: String\n  }\n\n  type Video {\n    videoDescription: String\n    guid: String\n    relType: ArticleVideoRelationship\n    id: Int!\n    width: Int\n    height: Int\n    duration: Int\n    url: String\n    thumbnail: String\n  }\n\n  type RelatedStory {\n    storyTitle: String!\n    id: Int!\n    pubDate: String!\n    type: [ContentType]\n    url: String\n    twitter: String\n    thumbnailUrl: String\n  }\n\n  type Article {\n    id: Int!\n    site: Int\n    zone: Int\n    type: [ContentType]\n    pubDate: String!\n    lastUpdated: String\n    url: String\n    twitter: String\n    title: String!\n    introduction: String!\n    content: String!\n    authors: [Author]\n    image: Image\n    audio: Audio\n    video: Video\n    relatedStories: [RelatedStory]\n  }\n\n  type Query {\n    articles(source: Audience): [Article]\n    articleById(source: Audience, id: Int): Article\n    articlesByZoneId(souce: Audience, zoneId: Int): [Article]\n    search(source: Audience, keywords: String, zoneId: Int = 0): [Article]\n    breakingNews(source: Audience): [Article]\n  }\n"], ["\n  enum Audience {\n    en\n    zh\n    fa\n  }\n\n  enum ContentType {\n    Audio\n    Video\n    PhotoGallery\n  }\n\n  enum ArticleVideoRelationship {\n    SameItem\n    MainImage\n    EmbededInContent\n  }\n\n  type Name {\n    first: String!\n    middle: String\n    last: String\n  }\n\n  type Author {\n    name: Name!\n    email: String\n    description: String\n    id: Int!\n  }\n\n  type Image {\n    imageTitle: String\n    id: Int!\n    type: [ContentType]\n    url: String!\n  }\n\n  type Audio {\n    audioTitle: String!\n    audioDescription: String\n    id: Int!\n    duration: Int\n    mime: String\n    url: String\n    date: String\n  }\n\n  type Video {\n    videoDescription: String\n    guid: String\n    relType: ArticleVideoRelationship\n    id: Int!\n    width: Int\n    height: Int\n    duration: Int\n    url: String\n    thumbnail: String\n  }\n\n  type RelatedStory {\n    storyTitle: String!\n    id: Int!\n    pubDate: String!\n    type: [ContentType]\n    url: String\n    twitter: String\n    thumbnailUrl: String\n  }\n\n  type Article {\n    id: Int!\n    site: Int\n    zone: Int\n    type: [ContentType]\n    pubDate: String!\n    lastUpdated: String\n    url: String\n    twitter: String\n    title: String!\n    introduction: String!\n    content: String!\n    authors: [Author]\n    image: Image\n    audio: Audio\n    video: Video\n    relatedStories: [RelatedStory]\n  }\n\n  type Query {\n    articles(source: Audience): [Article]\n    articleById(source: Audience, id: Int): Article\n    articlesByZoneId(souce: Audience, zoneId: Int): [Article]\n    search(source: Audience, keywords: String, zoneId: Int = 0): [Article]\n    breakingNews(source: Audience): [Article]\n  }\n"])));
var templateObject_1;
//# sourceMappingURL=articleSchema.js.map